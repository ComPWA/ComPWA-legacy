# This will run on Travis' 'new' container-based infrastructure
sudo: false
language: c++

# Blacklist
branches:
    only: 
        - master
        - coverity_scan
    except: gh-pages

# Environment variables
env:
    global:
        - GH_REPO_NAME: ComPWA
        - DOXYFILE: $TRAVIS_BUILD_DIR/doc/Doxyfile.travisCI
        - GH_REPO_REF: github.com/ComPWA/ComPWA.git
        - OMP_NUM_THREADS: 1
        - LANG: en_US.UTF-8
        - BASEPATH: $HOME/build/ComPWA
          # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
          #   via the "travis encrypt" command using the project repo's public key
        - secure: "I1LwO65P4q89f31HYnFlrlJ9yHyJ/QIAOXR5CtPfMo5FnestBtlQg6fX3p1vLNi5XdYXP4QpP51FFGJ5suz1aigC45JRaMzO98WQmMvIqYufrhkYej6lNevL0z/tHeI0aURH7N1SfSZaLwkepErssOsdjJAqP538ldA3Zz9g2gM="


before_install:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
        echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-;
      fi
    - eval "${MATRIX_EVAL}"

matrix:
  allow_failures: 
    #- compiler: clang
    - os: osx

  include:
    - os: osx
      osx_image: xcode9.3
      env: TASK="ROOT v6"
      #allow_failures: true
      before_script:
        - env # Debugging
          # We have to check first if a package is installed, otherwise an error
          # is thrown.
        - if brew ls --versions boost > /dev/null; then 
            echo "Boost installed:\ `brew ls --versions boost`";
          else brew install boost; fi
        - if brew ls --versions gsl > /dev/null; then 
            echo 'GSL installed:\ `brew ls --versions gsl`';
          else brew install gsl; fi
        - brew upgrade python
        - virtualenv venv -p python3
        - source venv/bin/activate
        - pip install -r requirements.txt
        - if brew ls --versions root > /dev/null; then 
            echo 'ROOT installed:\ `brew ls --versions root`';
          else brew install root;
            if brew install root; then echo "top";
            else
              brew link --overwrite gcc;
              brew install root;
            fi
          fi
        #- wget https://root.cern.ch/download/root_v6.12.06.macosx64-10.13-clang90.tar.gz
        #- tar xpvfz root_*.tar.gz > /dev/null 2>&1
        

    - os: linux
      dist: trusty
      env: TASK="Build documentation"
      addons: 
        apt: 
            packages:
              - doxygen
              - doxygen-doc
              - doxygen-gui
              - graphviz
      before_script:
        - env
      script:
        # Generate and deploy documentation to gh-pages 
        # Only in case that this is not a pull request
        # and we are on branch master
        - if [[ "$TRAVIS_BRANCH" == "master" ]]; then 
              cd $BASEPATH;
              chmod +x $TRAVIS_BUILD_DIR/doc/generateDoxygen.sh;
              $TRAVIS_BUILD_DIR/doc/generateDoxygen.sh; 
          fi  

    - os: linux
      compiler: gcc
      dist: trusty  #Ubuntu14.04 LTS
      env: 
        - TASK="gcc7 ROOT v6.10"
        - ROOTSYS=$BASEPATH/root
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons: 
        apt:
            sources:
                - ubuntu-toolchain-r-test
            packages:
              - g++-7
              - libboost-all-dev # Version 1.54 for trusty
              - libgsl0-dev
              - python3
              - python3-pip              
        coverity_scan:
            project:
                name: "ComPWA/ComPWA"
                description: "Build submitted via Travis CI"
            notification_email: peter.weidenkaff@mailbox.org
            build_command_prepend: "cd $BASEPATH/ComPWA; cmake -DPYBIND11_PYTHON_VERSION=3.4 ./"
            build_command: "make -j2"
            branch_pattern: coverity_scan
      before_script:
        - pip3 install --user -U -r requirements.txt
        - env
        - cd $BASEPATH
          # ROOT v6.10
        - wget https://root.cern.ch/download/root_v6.10.02.Linux-ubuntu14-x86_64-gcc4.8.tar.gz
        - tar xpvfz root_*.tar.gz > /dev/null 2>&1

    - os: linux
      compiler: gcc
      dist: trusty  #Ubuntu14.04 LTS
      env:
        - TASK="gcc5 ROOT v6.10"
        - ROOTSYS=$BASEPATH/root
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
            sources:
                - ubuntu-toolchain-r-test
            packages:
              - g++-5
              - libboost-all-dev # Version 1.54 for trusty
              - libgsl0-dev
              - python3
              - python3-pip
        coverity_scan:
            project:
                name: "ComPWA/ComPWA"
                description: "Build submitted via Travis CI"
            notification_email: peter.weidenkaff@mailbox.org
            build_command_prepend: "cd $BASEPATH/ComPWA; cmake -DPYBIND11_PYTHON_VERSION=3.4 ./"
            build_command: "make -j2"
            branch_pattern: coverity_scan
      before_script:
        - pip3 install --user -U -r requirements.txt
        - env
        - cd $BASEPATH
          # ROOT v6.10
        - wget https://root.cern.ch/download/root_v6.10.02.Linux-ubuntu14-x86_64-gcc4.8.tar.gz
        - tar xpvfz root_*.tar.gz > /dev/null 2>&1

    - os: linux
      compiler: clang
      dist: trusty  #Ubuntu14.04 LTS
      env: 
        - TASK="clang5 ROOT v6.10"
        - ROOTSYS=$BASEPATH/root
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
      addons: 
        apt:
            sources:
              - llvm-toolchain-trusty-5.0
              - ubuntu-toolchain-r-test
            packages:
              - clang-5.0
              - g++-7
              - libboost-all-dev # Version 1.54 for trusty
              - libgsl0-dev
              - python3
              - clang
              - python3-pip
      before_script:
        - pip3 install --user -U -r requirements.txt
        - env
        - cd $BASEPATH
          # ROOT v6.10
        - wget https://root.cern.ch/download/root_v6.10.02.Linux-ubuntu14-x86_64-gcc4.8.tar.gz
        - tar xpvfz root_*.tar.gz > /dev/null 2>&1
        - clang --version

    - os: linux
      dist: trusty  #Ubuntu14.04 LTS
      compiler: gcc
      env: 
        - TASK="gcc7 ROOT v5.34"
        - ROOTSYS=$BASEPATH/root
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons: 
        apt:
            sources:
              - ubuntu-toolchain-r-test 
            packages:
              - g++-7
              - libboost-all-dev # Version 1.54 for trusty
              - libgsl0-dev
              - python3
              - python3-pip
                # ubuntu trusty does not provide Minuit2 header files
              #- root-system # ROOT v.5.34 
              #- root-plugin-math-minuit2 
              #- libroot-math-minuit-dev
              #- libroot-io-dev
              #- libroot-hist-dev
              #- libroot-tree-dev
              #- libroot-montecarlo-eg-dev
              #- libroot-math-physics-dev
      before_script:
        - pip3 install --user -U -r requirements.txt
        - env
        - echo $ROOTSYS
        - cd $BASEPATH
          # ROOT v5.34
        - wget https://root.cern.ch/download/root_v5.34.36.Linux-ubuntu14-x86_64-gcc4.8.tar.gz
        - tar xpvfz root_*.tar.gz > /dev/null 2>&1

# Build your code e.g. by calling make
script:
    # Skip compilation in case we are on the coverity_scan branch
    - if [[ "$COVERITY_SCAN_BRANCH" != "1" ]]; then
         mkdir $BASEPATH/build;
         cd $BASEPATH/build;
         cmake -DPYBIND11_PYTHON_VERSION=3.4 $BASEPATH/ComPWA/;
         make -j2 VERBOSE=1;
         make test;
      fi
      
after_failure:
    - if [ -f ./Testing/Temporary/LastTest.log ]; then
        cat ./Testing/Temporary/LastTest.log;
      fi
