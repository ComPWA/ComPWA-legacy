# This will run on Travis' 'new' container-based infrastructure
sudo: false
language: c++
dist: xenial

# Blacklist
branches:
  only: 
    - master
    - coverity_scan
  except: gh-pages

env:
  global:
    - GH_REPO_NAME: ComPWA
    # - DOXYFILE: $TRAVIS_BUILD_DIR/doc/Doxyfile.travisCI
    - GH_REPO_REF: github.com/ComPWA/ComPWA.git
    - OMP_NUM_THREADS: 1
    - LANG: en_US.UTF-8
      #$TRAVIS_REPO_SLUG is of the form owner_name/repo_name
    - BASEPATH: $TRAVIS_BUILD_DIR
    - ROOTSYS: $BASEPATH/root
      # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
      # via the "travis encrypt" command using the project repo's public key
    - secure: "I1LwO65P4q89f31HYnFlrlJ9yHyJ/QIAOXR5CtPfMo5FnestBtlQg6fX3p1vLNi5XdYXP4QpP51FFGJ5suz1aigC45JRaMzO98WQmMvIqYufrhkYej6lNevL0z/tHeI0aURH7N1SfSZaLwkepErssOsdjJAqP538ldA3Zz9g2gM="
    - CODECOV_TOKEN: "2cf5be81-a194-49a5-a8ab-49123b181e2c"

addons:
  homebrew:
    # update: True # Boost update takes a while
    packages:
      - boost
      - gsl
      - python
  apt:
    update: True
    sources:
      - ubuntu-toolchain-r-test # gcc upto  8.0
      - llvm-toolchain-xenial-8
    packages:
      - gcc-7
      - g++-7
      - libboost-all-dev # Version 1.58 for xenial
      - libgsl0-dev

before_install:
  # TravisCI uses pyenv to manage different python versions
  # FindPython3.cmake finds always this version (no matter 
  # if it is activated or not)
  - pyenv global 3.7

install:
  - cd $BASEPATH
  - cmake --version
  # ROOT
  - wget https://root.cern.ch/download/root_${ROOTBIN}.tar.gz
  - tar xpvfz root_*.tar.gz > /dev/null 2>&1
  - source root/bin/thisroot.sh
  # Set additional variables
  - eval "${MATRIX_EVAL}"

matrix:
  # allow_failures:
    #- compiler: clang
    # - os: osx
  include:
    - os: osx
      osx_image: xcode10.2
      env:
        - TASK="clang ROOT v6.12"
        - ROOTBIN="v6.12.06.macosx64-10.13-clang90"
        # Add the brew python binary path to ensure python3 will be used
        - PATH=/usr/local/opt/python/libexec/bin:$PATH
      before_install:
        - echo "Using system python version."

    - os: linux
      compiler: gcc
      env: 
        - TASK="gcc7 ROOT v6.16"
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - ROOTBIN="v6.16.00.Linux-ubuntu16-x86_64-gcc5.4"

    - os: linux
      compiler: gcc # Xenial: gcc-5.4
      env:
        - TASK="gcc5 ROOT v6.16"
        - ROOTBIN="v6.16.00.Linux-ubuntu16-x86_64-gcc5.4"
      before_install:
        # For some reason we have because travisCI
        # does not execute the APT plugin for this instance.
        - sudo apt-get update && sudo apt-get install -y libboost-all-dev libgsl0-dev
        - pyenv global 3.7
        - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-;
      addons:
        coverity_scan:
            project:
              name: "ComPWA/ComPWA"
              description: "Build submitted via Travis CI"
            notification_email: peter.weidenkaff@mailbox.org
            build_command_prepend: "cd $BASEPATH/ComPWA; cmake ./"
            build_command: "make -j2"
            branch_pattern: coverity_scan
        apt:
          packages: 
            - lcov
      after_success:
        - cd $BASEPATH
        # Create lcov report
        - lcov --capture --directory . --output-file $BASEPATH/coverage.info
        # ignore certain files
        - lcov --remove $BASEPATH/coverage.info '/usr/*' '*/test/*' '*/ThirdParty/*' '*/root/include/*' --output-file $BASEPATH/coverage-filtered.info # filter system-files
        - lcov --list $BASEPATH/coverage-filtered.info # debug info
        # Uploading report to CodeCov
        - bash <(curl -s https://codecov.io/bash) -f $BASEPATH/coverage-filtered.info || echo "Codecov did not collect coverage reports"

    - os: linux
      compiler: clang
      env: 
        - TASK="clang7 ROOT v6.16"
        - ROOTBIN="v6.16.00.Linux-ubuntu16-x86_64-gcc5.4"

script:
  - mkdir $BASEPATH/build
  - cd $BASEPATH/build
  - if [ "$TASK" == "gcc5 ROOT v6.16" ]; then
      cmake -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=$BASEPATH/../install $BASEPATH;
    else
      cmake -DCMAKE_INSTALL_PREFIX=$BASEPATH/../install $BASEPATH;
    fi
  - cmake --build . -- -j 2
  # Do not run tests for osx since it will fail. The reason are the 
  # precompiled ROOT libraries do not have RPATH properly set.
  - if [ "$TRAVIS_OS_NAME" != "osx" ]; then
      ctest -j 2 --output-on-failure;
    fi
  - make install
  # Run python tests and test module installation
  - cd pycompwa && python setup.py pytest && cd ..
  - pip install ./pycompwa --user
